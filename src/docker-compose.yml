version: '3.8'

networks:
  presto-network:
    driver: bridge

services:
  coordinator:
    container_name: coordinator
    image: prestodb/presto:0.287
    ports:
      - 8000:8080
    volumes:
      - ./etc:/opt/presto-server/etc
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
    depends_on:
      - hive-metastore
    networks:
      - presto-network

  mysql:
    image: mysql
    hostname: mysql
    container_name: mysql
    ports:
      - 3306:3306  # default MySQL port
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: metastore_db
    networks:
      - presto-network

  hive-metastore:
    build: .
    image: hive-metastore:latest
    hostname: hive-metastore
    container_name: hive-metastore
    ports:
      - 9083:9083  # default HMS port
      - 10000:10000
    volumes:
      - ./conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      DB_HOSTNAME: mysql
    depends_on:
      - mysql
    networks:
      - presto-network

  minio:
    image: 'minio/minio'
    hostname: minio
    container_name: minio
    ports:
      - 9090:9090  # server address
      - 9091:9091  # console address
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_DOMAIN: minio
    command: server --address ":9090" --console-address ":9091" /data
    networks:
      presto-network:
        aliases:
          - warehouse.minio

  mc:
    image: minio/mc
    container_name: mc
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9090 minio minio123 --api S3v4) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "
    networks:
      - presto-network
    depends_on:
      - minio

  spark-hudi:
    image: 'apache/spark:v3.2.1'
    hostname: spark
    container_name: spark
    depends_on:
      - minio
      - hive-metastore
    ports:
      - 4041:4041
      - 4042:4042
      - 4043:4043
    volumes:
      # config files
      - ./conf/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf:ro
      - ./conf/core-site.xml:/opt/spark/conf/core-site.xml:ro
      - ./conf/hadoop-metrics2-s3a-file-system.properties:/opt/spark/conf/hadoop-metrics2-s3a-file-system.properties
      - ./conf/hadoop-metrics2-hbase.properties:/opt/spark/conf/hadoop-metrics2-hbase.properties
      - ./conf/hudi-defaults.conf:/etc/hudi/conf/hudi-defaults.conf:ro
      # jars
      - ./conf/jars/aws-java-sdk-1.11.901.jar:/opt/spark/jars/aws-java-sdk-1.11.901.jar
      - ./conf/jars/aws-java-sdk-core-1.11.901.jar:/opt/spark/jars/aws-java-sdk-core-1.11.901.jar
      - ./conf/jars/aws-java-sdk-dynamodb-1.11.901.jar:/opt/spark/jars/aws-java-sdk-dynamodb-1.11.901.jar
      - ./conf/jars/aws-java-sdk-s3-1.11.901.jar:/opt/spark/jars/aws-java-sdk-s3-1.11.901.jar
      - ./conf/jars/hadoop-aws-3.3.1.jar:/opt/spark/jars/hadoop-aws-3.3.1.jar
      - ./conf/jars/httpclient-4.5.13.jar:/opt/spark/jars/httpclient-4.5.13.jar
      - ./conf/jars/hudi-spark3.2-bundle_2.12-0.14.0.jar:/opt/spark/jars/hudi-spark3.2-bundle_2.12-0.14.0.jar
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_KEY: minio123
      HUDI_CONF_DIR: /etc/hudi/conf
    command: tail -f /dev/null
    networks:
      - presto-network


volumes:
  minio-data:
    driver: local
  mysql-data:
